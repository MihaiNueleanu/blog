<div id="comments">
  <div class="claps" @click="sendClap">
    <img src="/images/clap.svg" alt="Clap" />
    <span><span v-text="numberOfClaps"></span> Claps</span>
  </div>

  <div class="headline">
    <h3>Comments</h3>
    <button
      class="button button-simple"
      @click="sendingComment = !sendingComment"
    >
      Send comment
    </button>
  </div>

  <div class="comment-submit" v-if="sendingComment">
    <input type="text" v-model="message.name" placeholder="What's your name?" />

    <textarea
      v-model="message.body"
      name="messagebody"
      cols="30"
      rows="10"
      placeholder="Share your thoughts here..."
    ></textarea>

    <button class="button" @click="sendComment" :disabled="!canSubmit">
      Submit Comment
    </button>
  </div>

  <div class="comment-list">
    <div class="comment" v-for="item in messages">
      <h5 v-text="item.name"></h5>
      <p v-text="item.body"></p>
    </div>
  </div>
</div>

<script src="/js/vue@2.6.14.js"></script>
<script>
  function makeid(length) {
    var result = "";
    var characters =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    var charactersLength = characters.length;
    for (var i = 0; i < length; i++) {
      result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
  }

  function getUniqueToken() {
    const key = "discussionId";
    const token = localStorage.getItem(key);

    if (!token) {
      const newToken = makeid(12);
      localStorage.setItem(key, newToken);
      return newToken;
    }

    return token;
  }
</script>
<script>
  const base = "https://api.dotmethod.me";
  const blogPath = window.location.pathname;
  const uniqueToken = getUniqueToken();

  const app = new Vue({
    el: "#comments",
    data: {
      messages: [],

      message: {
        path: blogPath,
        unique_token: uniqueToken,
        name: "",
        body: "",
      },
      sendingComment: false,
      numberOfClaps: 0,
    },
    async mounted() {
      [this.messages, this.numberOfClaps] = await Promise.all([
        this.getComments(),
        this.getClaps(),
      ]);
    },
    methods: {
      async getComments() {
        const url = `${base}/api/discussions?path=${blogPath}`;
        const response = await fetch(url);
        const json = await response.json();
        return json;
      },
      async sendComment() {
        const url = `${base}/api/discussions`;
        const payload = {};
        const response = await fetch(url, {
          method: "PUT",
          body: JSON.stringify(this.message),
        });

        this.messages = await this.getComments();
        sendingComment = false;
      },
      async sendClap() {
        const url = `${base}/api/clap`;
        const payload = { path: blogPath, unique_token: uniqueToken };
        await fetch(url, {
          method: "PUT",
          body: JSON.stringify(this.message),
        });

        this.numberOfClaps = await this.getClaps();
      },
      async getClaps() {
        const url = `${base}/api/clap?path=${blogPath}`;
        const response = await fetch(url);
        const json = await response.json();
        return json.claps;
      },
    },
    computed: {
      canSubmit() {
        return this.message.name && this.message.body;
      },
    },
  });
</script>
